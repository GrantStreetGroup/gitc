name             = App-Gitc
abstract         = Git Changesets, tools for managing your git changes
version          = 0.58
author           = Grant Street Group <developers@grantstreet.com>
copyright_holder = Grant Street Group
license          = AGPL_3
main_module      = lib/App/Gitc.pod

;;; Early phase Git plugins ;;;
[Git::NextVersion]
first_version = 0.60

[Git::GatherDir]  ; needs to be prior to @Filter

[@Filter]
-bundle = @Basic
; keep our own copy of the LICENSE in the repo
-remove = License
; use Git::GatherDir
-remove = GatherDir

[ReportPhase]

[ReadmeAnyFromPod / ReadmePodInRoot]    ; Pod README for Root (for GitHub, etc.)
[ReadmeAnyFromPod / ReadmeTextInBuild]  ; Text README for Build  
[ReadmeAnyFromPod / ReadmeHTMLInBuild]  ; HTML README for Build (never POD, so it doesn't get installed)

;;; File weaving ;;;
[PodWeaver]
[OurPkgVersion]

;;; Prereqs ;;;
[AutoPrereqs]
[RemovePrereqs]
; Don't make these required
remove = JIRA::Client
remove = JIRA::Client::REST
remove = Pithub::Issues

; This is actually defined in gitc-list
remove = App::Gitc::ListFormat::Base

; FIXME - Both of these need to be reworked or ported over (See Issue #33)
remove = GSG::Eventum
remove = App::Gitc::Config

[Prereqs / RuntimeRecommends]
JIRA::Client       = 0
JIRA::Client::REST = 0
Pithub::Issues     = 0

[CheckPrereqsIndexed]

;;; Tests ;;;
[RunExtraTests]
[PodSyntaxTests]
[Test::CheckDeps]
[Test::ReportPrereqs]

; FIXME - Failing test platform needs some work...

;[PodCoverageTests]
;[Test::Perl::Critic]
;[Test::Compile]

;;; META maintenance ;;;
[MetaJSON]

[MetaNoIndex]
directory = t
directory = xt
directory = examples
directory = sql

[MetaProvides::Package]
meta_noindex = 1

[MetaResources]
bugtracker.web = https://github.com/GrantStreetGroup/gitc/issues
repository.url = git://github.com/GrantStreetGroup/gitc.git
repository.web = https://github.com/GrantStreetGroup/gitc
repository.type = git

;;; Post-build Git plugins ;;;
[TravisYML]
; Deps with failed tests
pre_install = cpanm --notest IO::All Date::PeriodParser XML::Simple

[Git::CheckFor::CorrectBranch]

[@Git]
allow_dirty = dist.ini
allow_dirty = .travis.yml
allow_dirty = README.pod
changelog   = ChangeLog
commit_msg  = Release v%v
push_to     = origin master:master

;;; Releasing ;;;

; Already in @Basic
;[TestRelease]
;[ConfirmRelease]
;[UploadToCPAN]
[InstallRelease]
[Clean]
